namespace calculator {
  string welcome(string name);
};

[Error]
enum CalculatorError {
  "DivisionBy0",
  "OtherError",
};

dictionary CalculatorData {
  string model;
  CalculatorSize size;
};

enum CalculatorSize {
  "Big",
  "Small",
};

enum Event {
  "Party",
  "Birthday",
  "Meeting",
};

interface Calculator {
  constructor(CalculatorData info);

  string get_info();

  i32 add(i32 a, i32 b);

  [Throws=CalculatorError]
  i32 divide(i32 a, i32 b);
};

callback interface Reminder {
  [Throws=CalculatorError]
  string remind_me();

  [Throws=CalculatorError]
  void ping_me(Event event);
};

interface Calendar {
  constructor(Reminder reminder);
  string today();
  string my_events();
  void start();
};
